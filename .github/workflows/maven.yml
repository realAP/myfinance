name: Pipeline
env:
  RUN_SMOKE_TESTS: false

on:
  push:
    branches: '**'
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    branches: '**'


jobs:
  test-fe:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: npm install
        run: |
          cd fe
          npm ci

      - name: Test frontend
        run: |
          cd fe
          echo "npm run test | currently disabled"

  test-be:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Tests
        run: |
          mvn test

      - name: SonarCloud
        run: |
          echo "mvn sonar:sonar -Pcoverage -Dsonar.projectKey=realAP_myfinance -Dsonar.host.url=https://sonarcloud.io | currently disabled"

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-fe:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: npm install
        run: |
          cd fe
          npm ci

      - name: build
        run: |
          cd fe
          npm run build

  build-be:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Build
        run: mvn package -DskipTests

  publish-docker-image-be:
    needs:
      - build-be
      - test-be
    runs-on: ubuntu-latest
    #if: contains('refs/heads/master', github.ref)
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Build
        run: mvn package -DskipTests

      - name: Build Docker image
        run: |
          docker build . -t ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:be-latest

      - name: Start image
        if: ${{ env.RUN_SMOKE_TESTS == 'true' }}  # Condition to control if the step runs
        run: docker compose up -d

      - name: Smoke Test
        if: ${{ env.RUN_SMOKE_TESTS == 'true' }}  # Condition to control if the step runs
        run: |
          success=false
          for i in {1..10}; do
            if  curl -s http://localhost:8080/actuator/health | grep -q '{"status":"UP"}'; then
              echo "Application is up and running."
              success=true
              break
            fi
            echo "Application is not up yet after $i retries. Retrying in 5 seconds..."
            sleep 5
          done
          
          if [[ "$success" == "false" ]]; then
            echo "Failed to start application after $i retries."
            exit 1
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push to Docker Hub
        run: |
          if [ "${GITHUB_REF#refs/heads/}" = "main" ]; then
            docker push ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:be-latest
          else
            docker tag ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:be-latest ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:be-test
            docker push ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:be-test
          fi
        env:
          username: ${{ vars.DOCKER_HUB_USERNAME }}

  publish-docker-image-fe:
    needs:
      - build-fe
      - test-fe
    runs-on: ubuntu-latest
    #if: contains('refs/heads/master', github.ref)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: npm install
        run: |
          cd fe
          npm ci

      - name: build
        run: |
          cd fe
          npm run build

      - name: Build Docker image
        run: |
          cd fe
          docker build . -t ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:fe-latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push to Docker Hub
        run: |
          if [ "${GITHUB_REF#refs/heads/}" = "main" ]; then
            docker push ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:fe-latest
          else
            docker tag ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:fe-latest ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:fe-test
            docker push ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:fe-test
          fi
        env:
          username: ${{ vars.DOCKER_HUB_USERNAME }}


  publish-dockerhub-description:
    needs:
      - publish-docker-image-be
      - publish-docker-image-fe
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update Dockerhub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ vars.DOCKER_HUB_USERNAME }}/myfinance
          readme-filepath: ./README.md
