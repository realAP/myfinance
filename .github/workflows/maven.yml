name: Pipeline

on:
  push:
    branches: '**'
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    branches: '**'


jobs:
  testfe:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: npm install
        run: |
          cd fe
          npm ci

      - name: build
        run: |
          cd fe
          npm run build

      - name: Test frontend
        run: |
          cd fe
          npm run test

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Tests
        run: |
          mvn test 

      - name: SonarCloud
        run: |
          mvn sonar:sonar -Pcoverage -Dsonar.projectKey=realAP_myfinance -Dsonar.host.url=https://sonarcloud.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Build
        run: mvn package -DskipTests

  publish-docker-image:
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    if: contains('refs/heads/master', github.ref)
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Build
        run: mvn package -DskipTests

      - name: Build Docker image
        run: |
          docker build . -t ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:latest

      - name: Start image
        run: docker compose up -d

      - name: Smoke Test
        run: |
          success=false
          for i in {1..10}; do
            if  curl -s http://localhost:8080/actuator/health | grep -q '{"status":"UP"}'; then
              echo "Application is up and running."
              success=true
              break
            fi
            echo "Application is not up yet after $i retries. Retrying in 5 seconds..."
            sleep 5
          done
          
          if [[ "$success" == "false" ]]; then
            echo "Failed to start application after $i retries."
            exit 1
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push to Docker Hub
        run: |
          docker push ${{ vars.DOCKER_HUB_USERNAME }}/myfinance:latest
        env:
          username: ${{ vars.DOCKER_HUB_USERNAME }}

      - name: Update Dockerhub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ vars.DOCKER_HUB_USERNAME }}/myfinance
          readme-filepath: ./README.md